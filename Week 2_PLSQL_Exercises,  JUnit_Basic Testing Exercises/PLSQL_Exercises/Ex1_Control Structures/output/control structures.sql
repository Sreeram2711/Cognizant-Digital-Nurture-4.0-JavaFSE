CREATE TABLE CUSTOMERS (
    CUSTOMER_ID INT PRIMARY KEY,
    NAME VARCHAR(100),
    DOB DATE,
    BALANCE DECIMAL(12,2),
    ISVIP BOOLEAN DEFAULT FALSE
);

CREATE TABLE LOANS (
    LOAN_ID INT PRIMARY KEY,
    CUSTOMER_ID INT,
    INTEREST_RATE DECIMAL(5,2),
    DUE_DATE DATE,
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID) ON DELETE CASCADE
);
INSERT INTO CUSTOMERS (CUSTOMER_ID, NAME, DOB, BALANCE) VALUES (1, 'sreeram', '1950-01-01', 15000), (2, 'gogulan', '1990-06-15', 8000), (3, 'hari', '1945-03-25', 12000);
3 rows inserted. (Query took 0.0004 seconds.)
INSERT INTO LOANS (LOAN_ID, CUSTOMER_ID, INTEREST_RATE, DUE_DATE) VALUES (1, 1, 10.50, CURDATE() + INTERVAL 20 DAY), (2, 2, 11.80, CURDATE() + INTERVAL 40 DAY), (3, 3, 12.20, CURDATE() + INTERVAL 10 DAY); 

DELIMITER $$

CREATE PROCEDURE ControlDis()
BEGIN
       UPDATE LOANS l JOIN CUSTOMERS c ON l.CUSTOMER_ID = c.CUSTOMER_ID
    SET l.INTEREST_RATE = l.INTEREST_RATE - 1
    WHERE TIMESTAMPDIFF(YEAR, c.DOB, CURDATE()) > 60;

  
    UPDATE CUSTOMERS
    SET ISVIP = TRUE
    WHERE BALANCE > 10000;

    
    SELECT CONCAT(
        'Reminder: Loan ', l.LOAN_ID, 
        ' for Customer ', c.CUSTOMER_ID, 
        ' is due on ', DATE_FORMAT(l.DUE_DATE, '%d-%b-%Y')
    ) AS Reminder_Message
    FROM LOANS l
    JOIN CUSTOMERS c ON l.CUSTOMER_ID = c.CUSTOMER_ID
    WHERE l.DUE_DATE BETWEEN CURDATE() AND CURDATE() + INTERVAL 30 DAY;
END$$

DELIMITER ;
CALL ControlDis();

